{"version":3,"sources":["images/title.png","Header.js","SideBar.js","Card.js","data.js","Main.js","Button.js","Api.js","MainContainer.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","title","SideBar","Card","alt","name","birth","data","homer","marge","bart","lisa","Main","Button","onClick","type","Quote","result","Character","character","Image","Api","fetchData","fetch","then","response","json","setState","oneQuote","JSON","stringify","quote","image","console","log","state","this","React","Component","MainContainer","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78610bde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.05257f91.png\";","import React from 'react';\nimport './index.css';\nimport title from './images/title.png';\n\nconst Header = (props) => {\n    return (\n        <div>\n            <header className=\"header\">\n                <div className=\"image-container text-center\">\n                    <img className=\"title\" src={title} />\n                </div>\n            </header>\n        </div>\n    )\n}\n\n\n\n\nexport default Header;","import React from 'react';\nimport './index.css';\n\nconst SideBar = () => {\n    return (\n        <div className=\"sideBar col-3\">\n            <div className=\"card m-2 border-0 shadow\">\n                <img className=\"card-img img-sidebar\" src=\"https://assets.foxdcg.com/dpp-uploaded/images/the-simpsons/the-simpsons_31/seriesDetail_s31.jpg?fit=inside%7C1920:1080\"/>\n            </div>\n        </div>\n    )\n}\n\n\n\n\nexport default SideBar;","import React from 'react';\nimport './index.css';\n\nconst Card = (props) => {\n    return (\n        <div className=\"col-6\">\n            <div className=\"card card-profiles border-0 m-2 shadow\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <img src={props.src} className=\"card-img\" alt=\"...\" />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title card-name\">{props.name}</h5>\n                            <p className=\"card-text\">{props.birth}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\nexport default Card;","const data = {\n    homer: {\n        src: \"https://www.bento.de/images/00000000-0003-0004-0000-000000821052_w900_fpx50_fpy50.jpg\",\n        name: \"Homer\",\n        birth: \"May 12, 1955\",\n    },\n    marge: {\n        src: \"https://i.pinimg.com/474x/57/88/e0/5788e0be4de4ba68d9026bb350d52f36.jpg\",\n        name: \"Marge\",\n        birth: \"March 18, 1955\",\n    },\n    bart: {\n        src: \"https://img.discogs.com/tGTeV4wKMktK9JuW5L-TCJznDP0=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/A-1010823-1335728016.png.jpg\",\n        name: \"Bart\",\n        birth: \"unknown\",\n    },\n    lisa: {\n        src: \"https://vignette.wikia.nocookie.net/thesimpsonsgermany/images/d/da/Lisa-simpson.jpg/revision/latest?cb=20100514111723&path-prefix=de\",\n        name: \"Lisa\",\n        birth: \"May 9, 1981\",\n    },\n}\n\nexport default data;","import React from 'react';\nimport './index.css';\nimport Card from './Card';\nimport data from './data';\n\n\nconst Main = () => {\n    return (\n        <div className=\"main col-9\">\n            <div className=\"row\">\n            <Card\n                src={data.homer.src}\n                name={data.homer.name}\n                birth={data.homer.birth}\n            />\n            <Card\n                src={data.marge.src}\n                name={data.marge.name}\n                birth={data.marge.birth}\n            />\n            <Card\n                src={data.bart.src}\n                name={data.bart.name}\n                birth={data.bart.birth}\n            />\n            <Card\n                src={data.lisa.src}\n                name={data.lisa.name}\n                birth={data.lisa.birth}\n            />\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Main;","import React from 'react';\nimport './index.css';\n\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.onClick} type=\"button\" className=\"btn m-4\">Get a quote !</button>\n\n    )\n}\n\n\n\n\nexport default Button;","import React from 'react';\nimport './index.css';\nimport Button from './Button';\n\nconst Quote = props => {\n    return <h4 className=\"quote\">{props.result}</h4>\n}\n\nconst Character = props => {\nreturn <h5 className=\"author\">{props.character}</h5>\n}\n\nconst Image = props => {\n    return <img className=\"image\" src={props.src}/>\n}\n\n\n\nclass Api extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oneQuote: \"\",\n            character: \"\",\n            image: \"\",\n        };\n    }\n\n    fetchData = () => {\n        fetch(\"https://thesimpsonsquoteapi.glitch.me/quotes\")\n            .then(response => { return response.json() })\n            .then(data => {\n                this.setState({\n                    oneQuote: JSON.stringify(data[0].quote),\n                    character: data[0].character,\n                    image: data[0].image\n                })\n            })\n            console.log(this.state.image);\n    }\n\n\n    render() {\n        return (\n            <div className=\"col-12 button-container\">\n                <Button onClick={this.fetchData} />\n                <Quote result={this.state.oneQuote} />\n                <Character character={this.state.character}/>\n                <Image src={this.state.image} />\n            </div>\n        )\n    }\n};\n\n\n\n\nexport default Api;","import React from 'react';\nimport SideBar from './SideBar';\nimport Main from './Main';\n// import Button from './Button';\nimport Api from './Api';\nimport './index.css';\n\n\nconst MainContainer = (props) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <SideBar />\n                <Main />\n                <Api />\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\nexport default MainContainer;","import React from 'react';\nimport './index.css';\nimport title from './images/title.png';\n\n\nconst Footer = (props) => {\n    return (\n        <div>\n            <header className=\"footer\">\n                <div className=\"image-container text-center\">\n                    <img className=\"title\" src={title} />\n                </div>\n            </header>\n        </div>\n    )\n}\n\n\n\n\n\n\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport MainContainer from './MainContainer';\nimport Footer from './Footer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <MainContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}